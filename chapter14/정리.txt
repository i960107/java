1. 예외를 처리하기 위한 세 가지 블록에는 어떤 것이 있나요?
    1) try- catch
    2) try-catch-finally
    3) try(){}(try with resoruces)
2. 1의 답 중에서 여기에서 예외가 발생할 것이니 조심하세요 라고 선언하는 블록은? try
3. 1의 답 중에서 예외가 발생하든 안하든 예는 반드시 실행되어야합니다 하는 블록은? finally
4. 예외의 종류 세가지는 각각 무엇인가요? error, checked exception, runtime exception
5. 프로세스에 치명적인 영향을 주는 문제가 발생한 것을 무엇이라고 하나요? error. 발생하면 프로세스 종료됨
6. try나 catch 블록 내에서 예외를 발생시키는 키워드는 무엇인가요? throw
7. 메소드 선언시 어떤 예외를 던질 수도 있다고 선언할때 사용하는 키워드는?
throws. 메소드 내에서 발생한 checked exception을 호출한 메시지로 던질때 사용.
runtime exception도 던질 수 있는데 잘 사용하지 않음. callers are not requried to catch or throws these exceptions.
8. 직접 예외를 만들때 어떤 클래스의 상속을 받아서 만들어야만 하나요?
예측 가능하고, 예외 처리를 컴파일러에 의해 강제하고 싶은 경우에는 Exception
programming error나 버그에 의해서 실행 상황에서 발생할 가능성이 있지만 예외 처리를 강제하고 싶지 않은 경우에는 RuntimeException

