1. 생성자는 반드시 만들어야하나요? 아무 생성자도 만들지 않았을때 컴파일러에 의해 기본 생성자 추가되므로 반드시 만들 필요는 없다.
2. 만약 매개 변수가 있는 생성자를 만들고, 매개 변수가 없는 기본 생성자를 호출하면 어떻게 될까요? 구현된 생성자가 있는 경우 컴파일러는 기본 생성자를 추가하지 않는다.
 따라서 없는 생성자를 호출하기 때문에 컴파일러 에러가 발생한다.
3. 생성자의 개수는 제한이 있나요? 생성자의 갯수제한은 없지만 가독성 및 유지보수성을 위해 꼭 필요한 생성자만 추가하는 것이 좋다.
4. 인스턴스 변수와 매개 변수나 메소드 내에서 생성한 변수와 구분하기 위해서 사용하는 키워드는 무엇인가요? this
5. 메소드 선언시 리턴 타입으로 지정한 데이터를 넘겨줄때 필요한 키워드는 무엇인가요? return
6. 메소드 선언시 아무 데이터도 리턴 타입으로 넘겨주지 않겠다는 것을 지정하는 키워드는 무엇인가요? void. 모든 문장이 실행되었거나 return을 만나면 함수 종료
7. 메소드 선언에 static이 있는 것과 없는 것의 차이는 무엇인가요?
- static 메소드는 인스턴스 변수에는 접근할 수 없고 클래스 변수에만 접근 가능하다.
- static 메소드는 객체 생성 없이 클래스 이름으로 접근 가능하다.
8. 필자가 엄청나게 중요하다고 한 것 중 메소드 이름은 같으나 매개 변수를 다르게 하는 것의 명칭은 무엇인가요? 오버로딩.
같은 역할을 하는 메소드는 같은 이름을 가진다. 다만 매개변수의 타입이나 순서 개수는 다를 수 있다. 유연한 매개변수를 받을 수 있게 오버로딩을 한다.
ex) System.out.println() -> string, int, long도 받을 수 있음
9. 기본 자료형을 매개 변수로 넘겨 줄때 ? pass by value로 복사한 값을 넘겨준다.
10. 참조자료형을 매개변수로 넘겨줄때? pass by reference로 참조값의 복사본을 넘겨준다.
 객체를 재할당하는 것은 복사된 참조값의 재할당으로 함수 밖에 영향을 미치지 못하지만, 참조객체의 멤버 변수 혹은 배열의 원소의 수정은 참조객체 자체를 수정한다.
11. 매개 변수의 수가 가변적일 때 메소드 선언 시 타입과 변수 이름 사이에 어떤 것을 적어줘야 하나요? ...