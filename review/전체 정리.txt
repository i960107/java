1. String 클래스와 StringBuilder, StringBuffer 클래스의 차이를 정리해주세요.
- String, StringBuilder, StringBuffer는 모두 문자열을 처리하는데 사용되며 CharSequence를 구현한다.
- String으로 생성된 객체를 immutable하기 때문에 +연산시 새로운 객체가 생성되어 메모리 낭비가 발생한다.
- 이를 보완하기 위해서 +연산이 자주 일어나는 경우에 내부적으로 char[]을 가지는 StringBuilder, StrinbBuffer를 사용할 수 있다.
- StringBuffer는 내부적으로 synchronized 를 사용하여 동기화하기 때문에 멀티쓰레드 환경에서 안전하다. 하지만 lock을 획득하고,
해제하는 과정이 필요하기 때문에 느릴 수 있다.
- StringBuilder는 동시에 여러 쓰레드가 접근해 문자열을 수정할 수 있기 때문에 멀티스레드 환경에서 안전하지 않지만 비교적 빠르다.
2. String 클래스의 indexOf(), substring(), split(), getBytes() 메소드가 어떤 용도로 사용되는지 정리해주세요.
- indexOf() : 해당 문자열에서 매개변수 문자가 위치하는 곳의 인덱스를 반환한다. 여러개일 경우 첫번째 위치를 반환한다.
- substring() : 특정 위치의 문자를 대치한다. indexOf를 사용해 바꿀 문자의 위치를 찾은 후 새로운 문자로 대체할 수 있다
- split(): 특정 문자를 기준으로 문자열을 나눈다. 반환값은 문자열의 배열이 된다. 문자열 처리를 위해서 어절단위로 나눌때 사용한다.
- getByte(): 데이터를 바이트로 바꾸는 메서드로 OutputStream을 통해서 바이트를 내보낼때 사용된다.
3. System 클래스의 주요 용도를 정리해주세요
- in, out: PrintStream
- println() : 콘솔 출력
- currentTimeMillis(): 현재 시간을 long숫자로 반환. 메소드 실행 시간 측정 등 타이머로 사용
4. System 클래스에서 여러분들이 절대로 사용해서는 안되는 메소드들은 무엇이고, 그 이유를 정리해주세요.
- gc(), runFinalization : garbage collection 을 실행한다. gc를 기다리는 모든 객체에 대해 finalize()를 실행한다. 메인 메소드에서
gc를 호출하면 하려던 일을 멈추고 이 작업을 실행한다. 성능이 낮아진다.
- exit() : jvm을 종료시킨다.
5. 제네릭을 사용하는 가장 큰 이유는 무엇인지 정리해주세요.
- 설계시 여러 형태가 될 수 있도록 일반적으로 선언하고 사용시에 구체적인 타입으로 명시해서 코드 재사용성을 높인다.
- 불필요한 형변환을 없애고 컴파일시 강한 타입 체크를 통해 실수를 방지한다.
6. Set의 용도와 주요 클래스를 정리해주세요.
- 순서가 중요하지 않고 중복이 없는 데이터를 저장할때 사용한다.
- 어떤 데이터가 존재하는지 확인할때 사용할 수 있다. 검색시 O(1) 걸린다.
- HashSet, TreeSet(정렬이 필요할때), LinkedHashSet(삽입된 순서가 중요할때) 사용할 수 있다.
7. Set의 데이터를 하나씩 꺼내는 방법을 정리해주세요.
- set은 iterator 인터페이스를 구현하기 때문에 foreach() 혹은 for문(for(요소 타입 임시변수명: set)으로 순회할 수 있다.
8. ArrayList와 같은 List와 배열의 차이가 무엇인지 정리해주세요.
- 배열을 생성시 고정된 크기를 지정해야한다. ArrayList는 생성시 크기를 지정하지 않아도 임의의 크기로 생성되며, 현재 크기보다 더 많은 수의 데이터가
저장된다면 더 큰 크기의 새로운 배열을 만들고 값을 복사하는 배열확장이 자동으로 일어납니다.
9. Queue의 용도는 무엇이며, LinkedList의 특징이 무엇인지 정리해주세요.
- Queue는 FIFO를 처리하기 위한 클래스로 배열의 마지막에 원소를 추가하고 배열의 처음에서 원소를 빼낸다. 대기열과 같은 곳에 사용할 수 있다.
- LinkedList는 List이면서 Queue이다. 배열의 앞뒤로 원소를 추가하고 삭제할 수 있다. 또한 배열의 중간에서 원소의 삽입과 삭제가 빠른데, 배열은 원소 삽입과 삭제시 뒤 원소들의 인덱스 쉬프트가 필요한데,
반해 LinkedList는 앞뒤 요소들의 링크만 조정해주면 되기 때문이다.
10. map의 용도와 주요 클래스를 정리해주세요.
- 키와 값의 쌍으로 관리하기 위해 사용된다.
- HashMap, LinkedHashMap(삽입 순서 기억), TreeMap(키의 정렬), HashTable(쓰레드 안정성)
11.Arrays클래스의 주요 용도는 무엇인지 정리해주세요.
- 배열을 다루기 위한 다양한 유틸리티 메소드 제공(static)
- Arrays.sort(), Arrays.copyOf(), Arrays.toString(), Arrays.fill(), Arrays.stream()
12. StringTokenizer의 용도는? 문자열을 특정 구분자를 기준으로 토큰으로 분할하기 위해 사용.
13. Thread 클래스를 확장한 클래스를 구현할 때 항상 만들어야 하는 메소드는 무엇인가요?
- run() : 해당 스레드에서 실행할 작업.
14. Thread 클래스와 Runnable 인터페이스를 구현하여 만든 쓰레드를 실행하려면 각각 어떻게 해야 하는지 정리해주세요.
- Thread 클래스를 상속한 후 run() 메소드를 오버라이드 해야한다. 클래스의 객체를 만들고 객체의 run()을 호출한다.
- 새로운 Thread 객체를 만들면서 Runnable 인터페이스를 구현한 객체를 매개변수로 넘긴다. Thread타입 객체의 run()을 호출한다.
15. synchronized에 대해서 정리해주세요.
- 멀티쓰레드 환경에서 race condition을 방지하기 위해 synchronized 메소드 혹은 synchronized block을 만들 수 있다.
- 공유 자원을 사용하는 메소드에 대해서 synchronized 키워드를 붙이면 한번에 한 쓰레드만 객체의 메서드를 호출할 수 있다. 이후에 해당 객체의 모든
synchronized 메소드를 호출하는 쓰레드들은 BLOCKED 상태가 되며, synchronized 블록 수행이 끝나고 난 후 대기 중인 쓰레드 중 하나가 다시 실행할 수 있다.
- synchronized block은 객체 전체가 아닌 특정 객체에 대해서 임계 영역을 지정해서 한번에 한 쓰레드만 수행가능하도록 하는 방식이다. 대기 시간을 줄여 성능을 높일 수 있다.
현재 객체가 아닌 특정 객체를 monitor lock으로 사용해서 임계영역을 분류하면 대기 시간을 더 줄일 수 있다.
16. InputStream 클래스의 용도는 무엇이고, Reader 클래스와 어떤 점이 다른지 정리해주세요.
- InputStream은 네트워크 또는 파일에서 스트림을 읽어들이는 용도로 바이트 기반 스트림이다. Reader도 똑같은 역할을 하지만 스트림을 문자열로 읽는다.
17. 클래스 선언시 Serializable을 구현하는 이유는 무엇인지 정리해주세요.
- Serializable은 구현해야하는 메서드가 없는 마커 인터페이스이다.
- 해당 클래스가 직렬화(네트워크를 통해 전송, 객체 상태를 파일로 저장)가 가능하다는 것을 명시하는 용도이다.
- Serializable이 구현되지 않은 객체를 직렬화할때 ObjectOutputStream에서 NonSerializable Exception이 발생한다.
18. transient로 선언한 변수는 다른 변수와 어떻게 다른지 설명해주세요.
- 직렬화시에 해당 필드를 제외시킨다.
- 캐싱 데이터, 시스템 자원에 대한 데이터, 임시 변수, Serializable을 구현하지 않은 객체 필드 등 직렬화가 필요 없는 데이터를 제외시킨다.
19. TCP 통신을 처리하기 위해서 사용하는 클래스는? Socket, ServerSocket
20. UDP 통신을 처리하기 위해서 사용하는 클래스는? DatagramSocket, DatagramPacket
