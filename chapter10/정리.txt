1. 상속을 받는 클래스의 선언문에 사용하는 키워드는 무엇인가요? extends
2. 상속을 받은 클래스의 생성자를 수행하면 부모의 생성자도 자동으로 수행되나요?
부모 클래스에 기본 생성자가 있다면 자식 생성자의 맨 처음에 자동으로 호출된다.
부모 클래스에 기본생성자가 없다면 명시적으로 호출해야한다.
3. 부모 클래스의 생성자를 자식 클래스에서 직접 선택하려고 할때 사용하는 예약어는 무엇인가요? super()
4. 메소드 overriding과 overloading을 정확하게 설명해보세요.
- 오버로딩은 하나의 클래스 안에 같은 이름이지만 매개변수가 다른 메소드를 여러개 선언해서 매개변수를 유연하게 받을 수 있도록 하는 것을 말한다.
 같은 역할을 하는 함수는 같은 이름을 가지게 되므로 개발자는 어떤 함수를 쓸지만 기억하면 된다.
- 오버라이딩은 자식 클래스가 부모 클래스의 메소드를 재정의해서 부모 클래스와 다르게 동작하도록 하는 것을 말한다.
같은 함수를 호출하여도 어떤 클래스의 함수냐에 따라 다르게 동작한다.
5. A가 부모, B가 자식 클래스라면 A a = new B();의 형태로 객체 생성이 가능한가요?
-upcasting은 자동으로 이뤄지므로 가능함.
-메모리의 측면에서 설명해보자면 자식 객체만큼 힙 메모리가 할당되고 자식 객체 부분이 더해진다.
6. 명시적으로 형 변환을 하기 전에 타입을 확인하려면 어떤 예약어를 사용해야하나요?
1) instanceof 2) obj.getClass() == String.class
7. 6에서 사용한 예약어의 좌측에는 어떤 값이, 우측에는 어떤 값이 들어가나요? 객체 instanceof 대상 클래스
8. 6의 예약어의 수행 결과는 어떤 타입으로 제공되나요?
- boolean.
- upcasting된 객체를 다시 downcasting 하기 전에 if(객체 instanceof <class>) {class a = (class)객체 } 로 다운 캐스팅
- TypeConversionException?
9. Polymorphism이라는 것은 도대체 뭔가요?
- 다형성은 OOP의 핵심으로 하나의 코드가 다양한 방식으로 동작할 수 있도록 하는 것을 말한다.
- 오버라이딩을 통해 부모 타입의 변수에 어떤 클래스를 대입하느냐에 따라 같은 함수의 호출이 다르게 동작할 수 있도록하고,
, 오버로딩을 통해 어떤 매개변수를 넘겨주는지에 따라 호출되는 메소드가 달라지게 함으로서 다형성을 구현할 수 있다.
[참고]
- actual object class에 따라서 달라짐. 생성된 객체의 힙메모리 object metadata(class and its superclasses and interfaces)를  참고함.
부모 클래스 객체 instanceof 부모 클래스 : true
부모 클래스 객체 instanceof 자식 클래스 : false
자식 클래스 객체 instanceof 부모 클래스 : true
부모 클래스 객체로 upcasting된 자식 클래스 객체 instanceof 부모 클래스 : true
부모 클래스 객체로 upcasting된 자식 클래스 객체 instanceof 자식 클래스 : true
