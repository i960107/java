1. I/O는 각각 무엇의 약자인가? input/ output
2. File 클래스는 파일만 지정할 수 있나? path를 지정함. 디렉토리일수도 파일일수도.
3. OS마다 다른 경로 구분자를 처리하기 위해서는 File 클래스의 어떤 상수를 사용해야하나? seperator
4. File클래스에서 디렉터리를 만드는 mkdir()과 mkdirs()메서드의 차이는?
- mkdir()는 prefix에 해당하는 경로까지는 이미 생성되어있고 하나의 폴더만 만들때 사용. prefix 경로가 존재하지 않는다면 false 반환.
- mkdirs()는 경로상의 모든 디렉터리를 생성함.
5. File클래스의 list()와 listFiles()메서드의 차이는?
- list()는 디렉터리 내의 파일 혹은 디렉터리의 이름을 문자열 배열로 반환.
- listFiles()는 File객체로 반환.
- 만약 매개변수로 전달된 path가 디렉터리가 아닐 경우 null 반환
6. FileFilter와 FilenameFilter의 차이? 매개변수로 받은 File객체가 조건에 맞는지 체크하고, 경로에 String에 해당하는 파일이나 경로가 존재하는지 확인.
7. InputStream이라는 abstract 클래스는 어떤 작업을 하기 위해서 만들어진 것인가요? 파일이나 네트워크 통신을 통해 바이트 배열을 읽어들이기 위해.
8. OutputStream이라는 abstract 클래스는 어떤 작업을 하기 위해서 만들어진 것인가요? 바이트 배열을 파일에 쓰거나, 네트워크를 통해 전송하기 위해
9. Reader라는 abstract 클래스는 어떤 작업을 하기 위해서 만들어진 것인가요? 파일에서 문자열을 읽거나, 네트워크로 전송된 문자열을 읽어들이기 위해.
10. Writer라는 abstract 클래스는 어떤 작업을 하기 위해서 만들어진 것인가요? 파일에 문자열을 쓰거나, 네트워크로 문자열을 전송하기 위해.
11. BufferedReader나 BufferedWriting을 사용하는 이유는? 버퍼를 사용해서 일정량을 쌓아둔 후 한번에 읽거나 쓰도록 하는 보조 스트림이다.
실제 io작업의 수를 줄인다. io작업으로 인한 블로킹 시간을 줄여 어플리케이션 성능을 높이기 위해 사용한다.
12. 파일을 읽고, 문자열을 처리하기 위해 필요한 Scanner 클래스가 속해있는 패키지는 무엇인가요? java.util

